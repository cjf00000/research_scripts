#!/usr/bin/env python

import os, sys, math, linear_regression

if len(sys.argv) != 4:
        print 'Usage: get_zipf <corpus> <terms> <output>'
        sys.exit(0)

corpus_name = sys.argv[1]
terms = int(sys.argv[2])
output = sys.argv[3]

documents = map(lambda x: x.rstrip().split(' ')[2:], open(corpus_name, 'r').readlines())

word_count = {}

for doc in documents:
        for wor in doc:
                if not wor in word_count:
                        word_count[wor] = 1
                else:
                        word_count[wor] = word_count[wor] + 1

freqs = [(word_count[key], key) for key in word_count.keys()]
freqs.sort()
freqs.reverse()

fout = open(output, 'w')
n = min(len(freqs), terms)
for i in xrange(n):
        print freqs[i][0], freqs[i][1]
        fout.write('%s\n' % freqs[i][0])

fout.close()

nterms = len(freqs)

y, dummy = zip(*freqs)

loglog_data = [(math.log(x + 1), math.log(y)) for (x, y) in enumerate(y)]

log_x, log_y = zip(*loglog_data)

zipf_a, zipf_b = linear_regression.regression(log_x, log_y)

print 'Zipf a = %f, Zipf b = %f' % (zipf_a, zipf_b)
